
C:/Users/ngocp/OneDrive/Documents/Github/ECE3610/lab01/simple_program.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
.include    "address_map_arm.s"

.text                       
.global     _start          
_start: 
        LDR     R1, =LED_BASE  	/* Address of red LEDs. */
   0:	e59f1018 	ldr	r1, [pc, #24]	; 20 <ICCEOIR+0x10>
        LDR     R2, =SW_BASE    /* Address of switches. */
   4:	e59f2018 	ldr	r2, [pc, #24]	; 24 <ICCEOIR+0x14>

00000008 <LOOP>:
LOOP:   
        LDR     R3, [R2]        /* Read the state of switches. */
   8:	e5923000 	ldr	r3, [r2]
		MOV		R4, #16
   c:	e3a04010 	mov	r4, #16
		MUL		R3, R4			/* multiply register to 16 */
  10:	e0030394 	mul	r3, r4, r3
		SUBS	        R3, #8			/* subtract 8 from register value, "S" in SUBS is to update the 4-bit in CPSR, in this case "N" negative register is detected if subtraction results in negative number */ 
  14:	e2533008 	subs	r3, r3, #8
		STR		R3, [R1]		/* Display the state on LEDs. */
  18:	e5813000 	str	r3, [r1]
        B       LOOP            
  1c:	eafffff9 	b	8 <LOOP>
  20:	ff200000 	.word	0xff200000
  24:	ff200040 	.word	0xff200040
