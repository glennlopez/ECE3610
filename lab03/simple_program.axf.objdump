
C:/Users/ngocp/OneDrive/Documents/Github/ECE3610/lab03/simple_program.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:

.text                       
.global     _start          
@ .equ        STACK_BASE, 0x30000000
_start: 
        LDR     R1, =LED_BASE   /* Address of red LEDs. */
   0:	e59f10a4 	ldr	r1, [pc, #164]	; ac <dash_display+0x4>
        LDR     R2, =SW_BASE    /* Address of switches. */
   4:	e59f20a4 	ldr	r2, [pc, #164]	; b0 <dash_display+0x8>
        LDR     R3, =HEX3_HEX0_BASE /* Address of the low four 7segment digits */ 
   8:	e59f30a4 	ldr	r3, [pc, #164]	; b4 <dash_display+0xc>
        LDR     R4, =HEX5_HEX4_BASE /* Address of the high two 7segment digits */
   c:	e59f40a4 	ldr	r4, [pc, #164]	; b8 <dash_display+0x10>

00000010 <LOOP>:

LOOP:   
        LDRB    R5, [R2]        /* Read the state of switches, last 4 switches only, corresponding 0-9 */
  10:	e5d25000 	ldrb	r5, [r2]
        BL      BinaryDecoder
  14:	eb000002 	bl	24 <BinaryDecoder>
        STR     R6, [R3]        /* Display the state on 7segment. */
  18:	e5836000 	str	r6, [r3]
        STR     R6, [R4]        /* Display the state on 7segment. */
  1c:	e5846000 	str	r6, [r4]
        B       LOOP            
  20:	eafffffa 	b	10 <LOOP>

00000024 <BinaryDecoder>:

BinaryDecoder:
        CMP     R5, #0
  24:	e3550000 	cmp	r5, #0
        LDREQ   R6, zero_display        /* 0b00111111 = 0x3F : displaying 0 */
  28:	059f6050 	ldreq	r6, [pc, #80]	; 80 <zero_display>

        CMP     R5, #1
  2c:	e3550001 	cmp	r5, #1
        LDREQ   R6, one_display         /* 0b00000110 = 0x06 : displaying 1 */
  30:	059f604c 	ldreq	r6, [pc, #76]	; 84 <one_display>

        CMP     R5, #2
  34:	e3550002 	cmp	r5, #2
        LDREQ   R6, two_display         /* 0b01011011 = 0x5B : displaying 2 */
  38:	059f6048 	ldreq	r6, [pc, #72]	; 88 <two_display>

        CMP     R5, #3
  3c:	e3550003 	cmp	r5, #3
        LDREQ   R6, three_display       /* 0b01001111 = 0x4F : displaying 3 */
  40:	059f6044 	ldreq	r6, [pc, #68]	; 8c <three_display>

        CMP     R5, #4
  44:	e3550004 	cmp	r5, #4
        LDREQ   R6, four_display        /* 0b01100110 = 0x66 : displaying 4 */
  48:	059f6040 	ldreq	r6, [pc, #64]	; 90 <four_display>

        CMP     R5, #5
  4c:	e3550005 	cmp	r5, #5
        LDREQ   R6, five_display        /* 0b01101101 = 0x6D : displaying 5 */
  50:	059f603c 	ldreq	r6, [pc, #60]	; 94 <five_display>
        
        CMP     R5, #6
  54:	e3550006 	cmp	r5, #6
        LDREQ   R6, six_display         /* 0b01111101 = 0x7D : displaying 6 */
  58:	059f6038 	ldreq	r6, [pc, #56]	; 98 <six_display>

        CMP     R5, #7
  5c:	e3550007 	cmp	r5, #7
        LDREQ   R6, seven_display       /* 0b00000111 = 0x07 : displaying 7 */
  60:	059f6034 	ldreq	r6, [pc, #52]	; 9c <seven_display>

        CMP     R5, #8
  64:	e3550008 	cmp	r5, #8
        LDREQ   R6, eight_display       /* 0b01111111 = 0x7F : displaying 8 */
  68:	059f6030 	ldreq	r6, [pc, #48]	; a0 <eight_display>

        CMP     R5, #9                  
  6c:	e3550009 	cmp	r5, #9
        LDREQ   R6, nine_display        /* 0b01101111 = 0x67 :displaying 9 */
  70:	059f602c 	ldreq	r6, [pc, #44]	; a4 <nine_display>

        SUBS    R5, R5, #9              /* any number greater than 9, subtract to 9 will be > 9, then displaying "-" for error */
  74:	e2555009 	subs	r5, r5, #9
        LDRGT   R6, dash_display        /* 0b01000000 = 0x40 : displaying - (dash) */     
  78:	c59f6028 	ldrgt	r6, [pc, #40]	; a8 <dash_display>

        MOV     PC, R14
  7c:	e1a0f00e 	mov	pc, lr

00000080 <zero_display>:
  80:	3f3f3f3f 	.word	0x3f3f3f3f

00000084 <one_display>:
  84:	06060606 	.word	0x06060606

00000088 <two_display>:
  88:	5b5b5b5b 	.word	0x5b5b5b5b

0000008c <three_display>:
  8c:	4f4f4f4f 	.word	0x4f4f4f4f

00000090 <four_display>:
  90:	66666666 	.word	0x66666666

00000094 <five_display>:
  94:	6d6d6d6d 	.word	0x6d6d6d6d

00000098 <six_display>:
  98:	7d7d7d7d 	.word	0x7d7d7d7d

0000009c <seven_display>:
  9c:	07070707 	.word	0x07070707

000000a0 <eight_display>:
  a0:	7f7f7f7f 	.word	0x7f7f7f7f

000000a4 <nine_display>:
  a4:	67676767 	.word	0x67676767

000000a8 <dash_display>:
  a8:	40404040 	.word	0x40404040
  ac:	ff200000 	.word	0xff200000
  b0:	ff200040 	.word	0xff200040
  b4:	ff200020 	.word	0xff200020
  b8:	ff200030 	.word	0xff200030
